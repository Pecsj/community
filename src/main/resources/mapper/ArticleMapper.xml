<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 配置持久层接口的映射文件 -->
<mapper namespace="com.csj.mapper.ArticleMapper">
    <resultMap id="articleMap" type="com.csj.domain.Article">
        <id property="id" column="id"></id>
        <result property="title" column="title"></result>
        <result property="description" column="description"></result>
        <result property="tag" column="tag"></result>
        <result property="gmtCreat" column="gmt_creat"></result>
        <result property="gmtModified" column="gmt_modified"></result>
        <result property="creator" column="creator"></result>
        <result property="viewCount" column="view_count"></result>
        <result property="commentCount" column="comment_count"></result>
        <result property="likeCount" column="like_count"></result>
    </resultMap>

    <insert id="insertArticle" parameterType="com.csj.domain.Article">
        insert into article(title,description,gmt_creat,gmt_modified,creator,tag) values (#{title},#{description},#{gmtCreat},#{gmtModified},#{creator},#{tag})
    </insert>

    <select id="findById" parameterType="Integer" resultMap="articleMap">
        select * from article where creator = #{id}
    </select>

    <select id="findByAid" parameterType="Integer" resultMap="articleMap">
        select * from article where id = #{id}
    </select>

    <select id="isLike" parameterType="Integer" resultType="Integer">
        select count(*) from LIKE_ARTICLE where uid = #{uid} and aid = #{aid}
    </select>

    <update id="updateLike" parameterType="Integer">
        update article set like_count = ifnull(like_count,0)+1 where id = #{aid}
    </update>

    <update id="updateLookCount" parameterType="Integer">
        update article set view_count = ifnull(view_count,0)+1 where id = #{aid}
    </update>

    <update id="updateArticle" parameterType="com.csj.domain.Article">
        update article set description = #{description},title=#{title},tag=#{tag},gmt_modified=#{gmtModified} where id = #{id}
    </update>

    <select id="findHotList" resultMap="articleMap">
        SELECT * FROM article ORDER BY view_count DESC LIMIT 5
    </select>

    <select id="findCommentById" parameterType="Integer" resultType="com.csj.domain.dto.ArticleComment">
        SELECT t.aid,t.cid,t.uid,t.contain,t.likeCount,DATE_FORMAT(t.commentTime, '%Y-%m-%d') as commentTime,u.name,u.avatar_url as avatarUrl FROM COMMENT t LEFT JOIN USER u ON t.uid = u.id WHERE t.aid = #{aid}
    </select>

    <select id="findCommentIsLike" parameterType="Integer" resultType="com.csj.domain.CommentLike">
        SELECT * FROM like_comment WHERE uid = #{id}
    </select>

    <insert id="insertComment" parameterType="com.csj.domain.dto.ArticleComment">
        INSERT INTO COMMENT(aid,uid,contain,likeCount,commentTime) VALUES(#{aid},#{uid},#{contain},0,SYSDATE())
    </insert>

    <insert id="insertCommentLike" parameterType="com.csj.domain.CommentLike">
        insert into like_comment(cid,uid) values(#{cid},#{uid})
    </insert>

    <update id="updateCommentLike" parameterType="Integer">
        update comment set likeCount = likeCount + 1 where cid = #{cid}
    </update>

    <update id="updateCommentCount" parameterType="Integer">
        update article set comment_count = comment_count +1 where id = #{aid}
    </update>

    <select id="findByTitle" parameterType="String" resultType="com.csj.domain.Article">
        select * from article where title like #{title}
    </select>

    <delete id="deleteArticle" parameterType="String">
        delete from article where id = #{aid}
    </delete>

    <select id="getCid" parameterType="String" resultType="Integer">
        select cid from comment where aid = #{aid}
    </select>

    <delete id="deleteComment" parameterType="String">
        delete from comment where aid = #{aid}
    </delete>
    
    <delete id="deleteLikeArticle" parameterType="String">
        delete from like_article where aid = #{aid}
    </delete>

    <delete id="deleteLikeComment" parameterType="list">
        delete from like_comment
        <where>
          cid in
            <foreach item="item" collection="list" separator="," open="(" close=")" index="">
            #{item}
            </foreach>
        </where>
    </delete>


    <resultMap type="com.csj.domain.dto.MyComment" id="commentMap">
        <id column="id" property="aid"></id>
        <result column="title" property="title"/>
        <result column="description" property="description"/>
        <result column="name" property="uName"/>
        <result column="avatar_url" property="avatarUrl"/>
        <!-- collection 是用于建立一对多中集合属性的对应关系    ofType 用于指定集合元素的数据类型    -->
        <collection property="commentList" ofType="com.csj.domain.dto.ArticleComment">
            <result column="contain" property="contain"/>
            <result column="commentTime" property="commentTime"/>
        </collection>  </resultMap>

    <select id="findMyComment" parameterType="int" resultMap="commentMap">
        SELECT t.id,t.title,t.description,u.name,u.avatar_url,k.contain,k.commentTime
         FROM article t
         LEFT JOIN COMMENT k ON t.id = k.aid
         LEFT JOIN USER u ON u.id = t.creator
         WHERE t.id IN (SELECT DISTINCT aid FROM COMMENT WHERE uid = 1)
    </select>
</mapper>